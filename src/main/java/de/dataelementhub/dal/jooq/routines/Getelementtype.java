/*
 * This file is generated by jOOQ.
 */
package de.dataelementhub.dal.jooq.routines;


import de.dataelementhub.dal.jooq.Public;
import de.dataelementhub.dal.jooq.enums.ElementType;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Getelementtype extends AbstractRoutine<ElementType> {

    private static final long serialVersionUID = 1L;

    /**
     * The parameter <code>public.getelementtype.RETURN_VALUE</code>.
     */
    public static final Parameter<ElementType> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", SQLDataType.VARCHAR.asEnumDataType(de.dataelementhub.dal.jooq.enums.ElementType.class), false, false);

    /**
     * The parameter <code>public.getelementtype.id</code>.
     */
    public static final Parameter<Integer> ID = Internal.createParameter("id", SQLDataType.INTEGER, false, false);

    /**
     * Create a new routine call instance
     */
    public Getelementtype() {
        super("getelementtype", Public.PUBLIC, SQLDataType.VARCHAR.asEnumDataType(de.dataelementhub.dal.jooq.enums.ElementType.class));

        setReturnParameter(RETURN_VALUE);
        addInParameter(ID);
    }

    /**
     * Set the <code>id</code> parameter IN value to the routine
     */
    public void setId(Integer value) {
        setValue(ID, value);
    }

    /**
     * Set the <code>id</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setId(Field<Integer> field) {
        setField(ID, field);
    }
}
