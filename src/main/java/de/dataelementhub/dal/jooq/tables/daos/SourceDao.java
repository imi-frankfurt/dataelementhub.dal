/*
 * This file is generated by jOOQ.
 */
package de.dataelementhub.dal.jooq.tables.daos;


import de.dataelementhub.dal.jooq.enums.SourceType;
import de.dataelementhub.dal.jooq.tables.Source;
import de.dataelementhub.dal.jooq.tables.records.SourceRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SourceDao extends DAOImpl<SourceRecord, de.dataelementhub.dal.jooq.tables.pojos.Source, Integer> {

    /**
     * Create a new SourceDao without any configuration
     */
    public SourceDao() {
        super(Source.SOURCE, de.dataelementhub.dal.jooq.tables.pojos.Source.class);
    }

    /**
     * Create a new SourceDao with an attached configuration
     */
    public SourceDao(Configuration configuration) {
        super(Source.SOURCE, de.dataelementhub.dal.jooq.tables.pojos.Source.class, configuration);
    }

    @Override
    public Integer getId(de.dataelementhub.dal.jooq.tables.pojos.Source object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Source> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Source.SOURCE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Source> fetchById(Integer... values) {
        return fetch(Source.SOURCE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public de.dataelementhub.dal.jooq.tables.pojos.Source fetchOneById(Integer value) {
        return fetchOne(Source.SOURCE.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<de.dataelementhub.dal.jooq.tables.pojos.Source> fetchOptionalById(Integer value) {
        return fetchOptional(Source.SOURCE.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Source> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Source.SOURCE.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Source> fetchByName(String... values) {
        return fetch(Source.SOURCE.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public de.dataelementhub.dal.jooq.tables.pojos.Source fetchOneByName(String value) {
        return fetchOne(Source.SOURCE.NAME, value);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public Optional<de.dataelementhub.dal.jooq.tables.pojos.Source> fetchOptionalByName(String value) {
        return fetchOptional(Source.SOURCE.NAME, value);
    }

    /**
     * Fetch records that have <code>prefix BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Source> fetchRangeOfPrefix(String lowerInclusive, String upperInclusive) {
        return fetchRange(Source.SOURCE.PREFIX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>prefix IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Source> fetchByPrefix(String... values) {
        return fetch(Source.SOURCE.PREFIX, values);
    }

    /**
     * Fetch a unique record that has <code>prefix = value</code>
     */
    public de.dataelementhub.dal.jooq.tables.pojos.Source fetchOneByPrefix(String value) {
        return fetchOne(Source.SOURCE.PREFIX, value);
    }

    /**
     * Fetch a unique record that has <code>prefix = value</code>
     */
    public Optional<de.dataelementhub.dal.jooq.tables.pojos.Source> fetchOptionalByPrefix(String value) {
        return fetchOptional(Source.SOURCE.PREFIX, value);
    }

    /**
     * Fetch records that have <code>base_url BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Source> fetchRangeOfBaseUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(Source.SOURCE.BASE_URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>base_url IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Source> fetchByBaseUrl(String... values) {
        return fetch(Source.SOURCE.BASE_URL, values);
    }

    /**
     * Fetch a unique record that has <code>base_url = value</code>
     */
    public de.dataelementhub.dal.jooq.tables.pojos.Source fetchOneByBaseUrl(String value) {
        return fetchOne(Source.SOURCE.BASE_URL, value);
    }

    /**
     * Fetch a unique record that has <code>base_url = value</code>
     */
    public Optional<de.dataelementhub.dal.jooq.tables.pojos.Source> fetchOptionalByBaseUrl(String value) {
        return fetchOptional(Source.SOURCE.BASE_URL, value);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Source> fetchRangeOfType(SourceType lowerInclusive, SourceType upperInclusive) {
        return fetchRange(Source.SOURCE.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Source> fetchByType(SourceType... values) {
        return fetch(Source.SOURCE.TYPE, values);
    }
}
