/*
 * This file is generated by jOOQ.
 */
package de.dataelementhub.dal.jooq.tables.daos;


import de.dataelementhub.dal.jooq.enums.ElementType;
import de.dataelementhub.dal.jooq.tables.Staging;
import de.dataelementhub.dal.jooq.tables.records.StagingRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StagingDao extends DAOImpl<StagingRecord, de.dataelementhub.dal.jooq.tables.pojos.Staging, Integer> {

    /**
     * Create a new StagingDao without any configuration
     */
    public StagingDao() {
        super(Staging.STAGING, de.dataelementhub.dal.jooq.tables.pojos.Staging.class);
    }

    /**
     * Create a new StagingDao with an attached configuration
     */
    public StagingDao(Configuration configuration) {
        super(Staging.STAGING, de.dataelementhub.dal.jooq.tables.pojos.Staging.class, configuration);
    }

    @Override
    public Integer getId(de.dataelementhub.dal.jooq.tables.pojos.Staging object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Staging.STAGING.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchById(Integer... values) {
        return fetch(Staging.STAGING.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public de.dataelementhub.dal.jooq.tables.pojos.Staging fetchOneById(Integer value) {
        return fetchOne(Staging.STAGING.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchOptionalById(Integer value) {
        return fetchOptional(Staging.STAGING.ID, value);
    }

    /**
     * Fetch records that have <code>data BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchRangeOfData(String lowerInclusive, String upperInclusive) {
        return fetchRange(Staging.STAGING.DATA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>data IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchByData(String... values) {
        return fetch(Staging.STAGING.DATA, values);
    }

    /**
     * Fetch records that have <code>element_type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchRangeOfElementType(ElementType lowerInclusive, ElementType upperInclusive) {
        return fetchRange(Staging.STAGING.ELEMENT_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>element_type IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchByElementType(ElementType... values) {
        return fetch(Staging.STAGING.ELEMENT_TYPE, values);
    }

    /**
     * Fetch records that have <code>designation BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchRangeOfDesignation(String lowerInclusive, String upperInclusive) {
        return fetchRange(Staging.STAGING.DESIGNATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>designation IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchByDesignation(String... values) {
        return fetch(Staging.STAGING.DESIGNATION, values);
    }

    /**
     * Fetch records that have <code>import_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchRangeOfImportId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Staging.STAGING.IMPORT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>import_id IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchByImportId(Integer... values) {
        return fetch(Staging.STAGING.IMPORT_ID, values);
    }

    /**
     * Fetch records that have <code>scoped_identifier_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchRangeOfScopedIdentifierId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Staging.STAGING.SCOPED_IDENTIFIER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>scoped_identifier_id IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchByScopedIdentifierId(Integer... values) {
        return fetch(Staging.STAGING.SCOPED_IDENTIFIER_ID, values);
    }

    /**
     * Fetch records that have <code>converted_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchRangeOfConvertedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Staging.STAGING.CONVERTED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>converted_at IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchByConvertedAt(LocalDateTime... values) {
        return fetch(Staging.STAGING.CONVERTED_AT, values);
    }

    /**
     * Fetch records that have <code>converted_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchRangeOfConvertedBy(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Staging.STAGING.CONVERTED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>converted_by IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchByConvertedBy(Integer... values) {
        return fetch(Staging.STAGING.CONVERTED_BY, values);
    }

    /**
     * Fetch records that have <code>staged_element_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchRangeOfStagedElementId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Staging.STAGING.STAGED_ELEMENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>staged_element_id IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchByStagedElementId(String... values) {
        return fetch(Staging.STAGING.STAGED_ELEMENT_ID, values);
    }

    /**
     * Fetch records that have <code>members BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchRangeOfMembers(String lowerInclusive, String upperInclusive) {
        return fetchRange(Staging.STAGING.MEMBERS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>members IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.Staging> fetchByMembers(String... values) {
        return fetch(Staging.STAGING.MEMBERS, values);
    }
}
