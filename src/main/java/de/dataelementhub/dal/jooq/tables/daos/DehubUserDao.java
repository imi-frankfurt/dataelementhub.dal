/*
 * This file is generated by jOOQ.
 */
package de.dataelementhub.dal.jooq.tables.daos;


import de.dataelementhub.dal.jooq.tables.DehubUser;
import de.dataelementhub.dal.jooq.tables.records.DehubUserRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DehubUserDao extends DAOImpl<DehubUserRecord, de.dataelementhub.dal.jooq.tables.pojos.DehubUser, Integer> {

    /**
     * Create a new DehubUserDao without any configuration
     */
    public DehubUserDao() {
        super(DehubUser.DEHUB_USER, de.dataelementhub.dal.jooq.tables.pojos.DehubUser.class);
    }

    /**
     * Create a new DehubUserDao with an attached configuration
     */
    public DehubUserDao(Configuration configuration) {
        super(DehubUser.DEHUB_USER, de.dataelementhub.dal.jooq.tables.pojos.DehubUser.class, configuration);
    }

    @Override
    public Integer getId(de.dataelementhub.dal.jooq.tables.pojos.DehubUser object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.DehubUser> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(DehubUser.DEHUB_USER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.DehubUser> fetchById(Integer... values) {
        return fetch(DehubUser.DEHUB_USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public de.dataelementhub.dal.jooq.tables.pojos.DehubUser fetchOneById(Integer value) {
        return fetchOne(DehubUser.DEHUB_USER.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<de.dataelementhub.dal.jooq.tables.pojos.DehubUser> fetchOptionalById(Integer value) {
        return fetchOptional(DehubUser.DEHUB_USER.ID, value);
    }

    /**
     * Fetch records that have <code>auth_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.DehubUser> fetchRangeOfAuthId(String lowerInclusive, String upperInclusive) {
        return fetchRange(DehubUser.DEHUB_USER.AUTH_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>auth_id IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.DehubUser> fetchByAuthId(String... values) {
        return fetch(DehubUser.DEHUB_USER.AUTH_ID, values);
    }

    /**
     * Fetch a unique record that has <code>auth_id = value</code>
     */
    public de.dataelementhub.dal.jooq.tables.pojos.DehubUser fetchOneByAuthId(String value) {
        return fetchOne(DehubUser.DEHUB_USER.AUTH_ID, value);
    }

    /**
     * Fetch a unique record that has <code>auth_id = value</code>
     */
    public Optional<de.dataelementhub.dal.jooq.tables.pojos.DehubUser> fetchOptionalByAuthId(String value) {
        return fetchOptional(DehubUser.DEHUB_USER.AUTH_ID, value);
    }

    /**
     * Fetch records that have <code>first_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.DehubUser> fetchRangeOfFirstName(String lowerInclusive, String upperInclusive) {
        return fetchRange(DehubUser.DEHUB_USER.FIRST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.DehubUser> fetchByFirstName(String... values) {
        return fetch(DehubUser.DEHUB_USER.FIRST_NAME, values);
    }

    /**
     * Fetch records that have <code>last_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.DehubUser> fetchRangeOfLastName(String lowerInclusive, String upperInclusive) {
        return fetchRange(DehubUser.DEHUB_USER.LAST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_name IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.DehubUser> fetchByLastName(String... values) {
        return fetch(DehubUser.DEHUB_USER.LAST_NAME, values);
    }

    /**
     * Fetch records that have <code>user_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.DehubUser> fetchRangeOfUserName(String lowerInclusive, String upperInclusive) {
        return fetchRange(DehubUser.DEHUB_USER.USER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_name IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.DehubUser> fetchByUserName(String... values) {
        return fetch(DehubUser.DEHUB_USER.USER_NAME, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.DehubUser> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(DehubUser.DEHUB_USER.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<de.dataelementhub.dal.jooq.tables.pojos.DehubUser> fetchByEmail(String... values) {
        return fetch(DehubUser.DEHUB_USER.EMAIL, values);
    }
}
